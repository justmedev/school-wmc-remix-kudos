// This is your Prisma userCreateSchema file,
// learn more about it in the docs: https://pris.ly/d/prisma-userCreateSchema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String

  // one-to-one mandatory
  profileId Int     @unique
  profile   Profile @relation(fields: [profileId], references: [id])
}

model Profile {
  id       Int     @id @unique @default(autoincrement())
  profile  User?
  authored Kudos[] @relation(name: "authored")
  received Kudos[] @relation(name: "received")

  firstName      String
  lastName       String
  birtday        DateTime
  profilePicture String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Kudos     Kudos[]
}

model Kudos {
  id Int @id @unique @default(autoincrement())

  authorProfileId   Int     @unique
  authorProfile     Profile @relation(fields: [authorProfileId], references: [id], name: "authored")
  receiverProfileId Int     @unique
  receiverProfile   Profile @relation(fields: [receiverProfileId], references: [id], name: "received")

  message   String
  emoji     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}
